// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id        Int        @id @default(autoincrement())
  name      String
  email     String     @unique
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  Posts     Post[]
  Feedback  Feedback[]
  Kudos     Kudo[]
}

model Post {
  id     Int        @id @default(autoincrement())
  slug   String     @db.VarChar(255)
  title  String     @db.VarChar(255)
  status PostStatus @default(PENDING)

  Snippets Snippet[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  Author   User       @relation(fields: [userId], references: [id])
  userId   Int
  Feedback Feedback[]
  Kudos    Kudo[]

  @@unique([title, userId])
  @@index([slug])
}

model Snippet {
  id      Int    @id @default(autoincrement())
  content String @db.Text

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  Post                  Post                @relation(fields: [postId], references: [id])
  postId                Int
  ProgrammingLanguage   ProgrammingLanguage @relation(fields: [programmingLanguageId], references: [id])
  programmingLanguageId Int
}

model ProgrammingLanguage {
  id       Int       @id @default(autoincrement())
  name     String    @unique
  template String    @unique
  Snippet  Snippet[]
}

model Feedback {
  id        Int      @id @default(autoincrement())
  content   String   @db.Text
  Post      Post     @relation(fields: [postId], references: [id])
  postId    Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Author    User     @relation(fields: [userId], references: [id])
  userId    Int

  @@unique([userId, content])
}

model Kudo {
  Author User @relation(fields: [userId], references: [id])
  userId Int

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Post      Post     @relation(fields: [postId], references: [id])
  postId    Int

  @@id([userId, postId])
}

enum PostStatus {
  PENDING
  APPROVED
}
